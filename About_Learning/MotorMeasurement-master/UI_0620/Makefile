#############################################################################
# Makefile for building: UI_65
# Generated by qmake (2.01a) (Qt 4.8.2) on: ?? 12? 10 08:14:25 2015
# Project:  UI_65.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile UI_65.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/arm-linux-gnueabihf -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = configpage.cpp \
		datastack.cpp \
		datestpage.cpp \
		drawpage.cpp \
		homepage.cpp \
		keyboard.cpp \
		keybutton.cpp \
		main.cpp \
		mainwindow.cpp \
		mybutton.cpp \
		mycheckbox.cpp \
		mycombobox.cpp \
		mylineedit.cpp \
		myspinbox.cpp \
		mywatch.cpp \
		outputconfig.cpp \
		page_1.cpp \
		pdfheaderedit.cpp \
		picture.cpp \
		receiver_thread.cpp \
		serialport.cpp \
		uartthread.cpp moc_configpage.cpp \
		moc_datestpage.cpp \
		moc_drawpage.cpp \
		moc_homepage.cpp \
		moc_keyboard.cpp \
		moc_keybutton.cpp \
		moc_mainwindow.cpp \
		moc_mybutton.cpp \
		moc_mycheckbox.cpp \
		moc_mycombobox.cpp \
		moc_mylineedit.cpp \
		moc_myspinbox.cpp \
		moc_mywatch.cpp \
		moc_outputconfig.cpp \
		moc_page_1.cpp \
		moc_pdfheaderedit.cpp \
		moc_picture.cpp \
		moc_receiver_thread.cpp \
		moc_serialport.cpp \
		moc_uartthread.cpp \
		qrc_rcf.cpp
OBJECTS       = configpage.o \
		datastack.o \
		datestpage.o \
		drawpage.o \
		homepage.o \
		keyboard.o \
		keybutton.o \
		main.o \
		mainwindow.o \
		mybutton.o \
		mycheckbox.o \
		mycombobox.o \
		mylineedit.o \
		myspinbox.o \
		mywatch.o \
		outputconfig.o \
		page_1.o \
		pdfheaderedit.o \
		picture.o \
		receiver_thread.o \
		serialport.o \
		uartthread.o \
		moc_configpage.o \
		moc_datestpage.o \
		moc_drawpage.o \
		moc_homepage.o \
		moc_keyboard.o \
		moc_keybutton.o \
		moc_mainwindow.o \
		moc_mybutton.o \
		moc_mycheckbox.o \
		moc_mycombobox.o \
		moc_mylineedit.o \
		moc_myspinbox.o \
		moc_mywatch.o \
		moc_outputconfig.o \
		moc_page_1.o \
		moc_pdfheaderedit.o \
		moc_picture.o \
		moc_receiver_thread.o \
		moc_serialport.o \
		moc_uartthread.o \
		qrc_rcf.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		UI_65.pro
QMAKE_TARGET  = UI_65
DESTDIR       = 
TARGET        = UI_65

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_configpage.h ui_datestpage.h ui_homepage.h ui_keyboard.h ui_mainwindow.h ui_outputconfig.h ui_page_1.h ui_pdfheaderedit.h ui_picture.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: UI_65.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/arm-linux-gnueabihf/libQtGui.prl \
		/usr/lib/arm-linux-gnueabihf/libQtCore.prl
	$(QMAKE) -o Makefile UI_65.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/arm-linux-gnueabihf/libQtGui.prl:
/usr/lib/arm-linux-gnueabihf/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile UI_65.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/UI_651.0.0 || $(MKDIR) .tmp/UI_651.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/UI_651.0.0/ && $(COPY_FILE) --parents configpage.h datastack.h datestpage.h drawpage.h homepage.h keyboard.h keybutton.h mainwindow.h mybutton.h mycheckbox.h mycombobox.h mylineedit.h myspinbox.h mywatch.h outputconfig.h page_1.h pdfheaderedit.h picture.h receiver_thread.h serialport.h uartthread.h ui_helppage.h .tmp/UI_651.0.0/ && $(COPY_FILE) --parents rcf.qrc .tmp/UI_651.0.0/ && $(COPY_FILE) --parents configpage.cpp datastack.cpp datestpage.cpp drawpage.cpp homepage.cpp keyboard.cpp keybutton.cpp main.cpp mainwindow.cpp mybutton.cpp mycheckbox.cpp mycombobox.cpp mylineedit.cpp myspinbox.cpp mywatch.cpp outputconfig.cpp page_1.cpp pdfheaderedit.cpp picture.cpp receiver_thread.cpp serialport.cpp uartthread.cpp .tmp/UI_651.0.0/ && $(COPY_FILE) --parents configpage.ui datestpage.ui homepage.ui keyboard.ui mainwindow.ui outputconfig.ui page_1.ui pdfheaderedit.ui picture.ui .tmp/UI_651.0.0/ && (cd `dirname .tmp/UI_651.0.0` && $(TAR) UI_651.0.0.tar UI_651.0.0 && $(COMPRESS) UI_651.0.0.tar) && $(MOVE) `dirname .tmp/UI_651.0.0`/UI_651.0.0.tar.gz . && $(DEL_FILE) -r .tmp/UI_651.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_configpage.cpp moc_datestpage.cpp moc_drawpage.cpp moc_homepage.cpp moc_keyboard.cpp moc_keybutton.cpp moc_mainwindow.cpp moc_mybutton.cpp moc_mycheckbox.cpp moc_mycombobox.cpp moc_mylineedit.cpp moc_myspinbox.cpp moc_mywatch.cpp moc_outputconfig.cpp moc_page_1.cpp moc_pdfheaderedit.cpp moc_picture.cpp moc_receiver_thread.cpp moc_serialport.cpp moc_uartthread.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_configpage.cpp moc_datestpage.cpp moc_drawpage.cpp moc_homepage.cpp moc_keyboard.cpp moc_keybutton.cpp moc_mainwindow.cpp moc_mybutton.cpp moc_mycheckbox.cpp moc_mycombobox.cpp moc_mylineedit.cpp moc_myspinbox.cpp moc_mywatch.cpp moc_outputconfig.cpp moc_page_1.cpp moc_pdfheaderedit.cpp moc_picture.cpp moc_receiver_thread.cpp moc_serialport.cpp moc_uartthread.cpp
moc_configpage.cpp: page_1.h \
		mywatch.h \
		mybutton.h \
		datastack.h \
		myspinbox.h \
		configpage.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) configpage.h -o moc_configpage.cpp

moc_datestpage.cpp: outputconfig.h \
		serialport.h \
		page_1.h \
		mywatch.h \
		mybutton.h \
		datastack.h \
		myspinbox.h \
		datestpage.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) datestpage.h -o moc_datestpage.cpp

moc_drawpage.cpp: picture.h \
		page_1.h \
		mywatch.h \
		mybutton.h \
		datastack.h \
		myspinbox.h \
		mycombobox.h \
		pdfheaderedit.h \
		drawpage.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) drawpage.h -o moc_drawpage.cpp

moc_homepage.cpp: homepage.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) homepage.h -o moc_homepage.cpp

moc_keyboard.cpp: keyboard.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) keyboard.h -o moc_keyboard.cpp

moc_keybutton.cpp: mybutton.h \
		keyboard.h \
		mylineedit.h \
		keybutton.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) keybutton.h -o moc_keybutton.cpp

moc_mainwindow.cpp: mybutton.h \
		page_1.h \
		mywatch.h \
		datastack.h \
		myspinbox.h \
		configpage.h \
		pdfheaderedit.h \
		drawpage.h \
		picture.h \
		mycombobox.h \
		homepage.h \
		keyboard.h \
		mylineedit.h \
		outputconfig.h \
		serialport.h \
		datestpage.h \
		mainwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_mybutton.cpp: mybutton.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mybutton.h -o moc_mybutton.cpp

moc_mycheckbox.cpp: mybutton.h \
		mycheckbox.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mycheckbox.h -o moc_mycheckbox.cpp

moc_mycombobox.cpp: mybutton.h \
		mycombobox.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mycombobox.h -o moc_mycombobox.cpp

moc_mylineedit.cpp: mybutton.h \
		keyboard.h \
		mylineedit.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mylineedit.h -o moc_mylineedit.cpp

moc_myspinbox.cpp: mybutton.h \
		myspinbox.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) myspinbox.h -o moc_myspinbox.cpp

moc_mywatch.cpp: mywatch.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mywatch.h -o moc_mywatch.cpp

moc_outputconfig.cpp: serialport.h \
		page_1.h \
		mywatch.h \
		mybutton.h \
		datastack.h \
		myspinbox.h \
		outputconfig.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) outputconfig.h -o moc_outputconfig.cpp

moc_page_1.cpp: mywatch.h \
		mybutton.h \
		datastack.h \
		myspinbox.h \
		page_1.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) page_1.h -o moc_page_1.cpp

moc_pdfheaderedit.cpp: datastack.h \
		page_1.h \
		mywatch.h \
		mybutton.h \
		myspinbox.h \
		pdfheaderedit.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) pdfheaderedit.h -o moc_pdfheaderedit.cpp

moc_picture.cpp: page_1.h \
		mywatch.h \
		mybutton.h \
		datastack.h \
		myspinbox.h \
		picture.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) picture.h -o moc_picture.cpp

moc_receiver_thread.cpp: receiver_thread.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) receiver_thread.h -o moc_receiver_thread.cpp

moc_serialport.cpp: serialport.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) serialport.h -o moc_serialport.cpp

moc_uartthread.cpp: serialport.h \
		uartthread.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) uartthread.h -o moc_uartthread.cpp

compiler_rcc_make_all: qrc_rcf.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_rcf.cpp
qrc_rcf.cpp: rcf.qrc \
		logo.jpg
	/usr/bin/rcc -name rcf rcf.qrc -o qrc_rcf.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_configpage.h ui_datestpage.h ui_homepage.h ui_keyboard.h ui_mainwindow.h ui_outputconfig.h ui_page_1.h ui_pdfheaderedit.h ui_picture.h
compiler_uic_clean:
	-$(DEL_FILE) ui_configpage.h ui_datestpage.h ui_homepage.h ui_keyboard.h ui_mainwindow.h ui_outputconfig.h ui_page_1.h ui_pdfheaderedit.h ui_picture.h
ui_configpage.h: configpage.ui \
		mybutton.h \
		mycombobox.h \
		myspinbox.h \
		mybutton.h \
		mybutton.h
	/usr/bin/uic-qt4 configpage.ui -o ui_configpage.h

ui_datestpage.h: datestpage.ui \
		mybutton.h
	/usr/bin/uic-qt4 datestpage.ui -o ui_datestpage.h

ui_homepage.h: homepage.ui
	/usr/bin/uic-qt4 homepage.ui -o ui_homepage.h

ui_keyboard.h: keyboard.ui \
		keybutton.h \
		mybutton.h \
		keyboard.h \
		mylineedit.h
	/usr/bin/uic-qt4 keyboard.ui -o ui_keyboard.h

ui_mainwindow.h: mainwindow.ui
	/usr/bin/uic-qt4 mainwindow.ui -o ui_mainwindow.h

ui_outputconfig.h: outputconfig.ui \
		mybutton.h \
		mycombobox.h \
		mybutton.h
	/usr/bin/uic-qt4 outputconfig.ui -o ui_outputconfig.h

ui_page_1.h: page_1.ui \
		mybutton.h
	/usr/bin/uic-qt4 page_1.ui -o ui_page_1.h

ui_pdfheaderedit.h: pdfheaderedit.ui \
		mybutton.h \
		mylineedit.h \
		mycheckbox.h \
		mybutton.h \
		keyboard.h \
		mybutton.h
	/usr/bin/uic-qt4 pdfheaderedit.ui -o ui_pdfheaderedit.h

ui_picture.h: picture.ui \
		mycombobox.h \
		mybutton.h
	/usr/bin/uic-qt4 picture.ui -o ui_picture.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

configpage.o: configpage.cpp configpage.h \
		page_1.h \
		mywatch.h \
		mybutton.h \
		datastack.h \
		myspinbox.h \
		ui_configpage.h \
		mycombobox.h \
		mainwindow.h \
		pdfheaderedit.h \
		drawpage.h \
		picture.h \
		homepage.h \
		keyboard.h \
		mylineedit.h \
		outputconfig.h \
		serialport.h \
		datestpage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o configpage.o configpage.cpp

datastack.o: datastack.cpp datastack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o datastack.o datastack.cpp

datestpage.o: datestpage.cpp datestpage.h \
		outputconfig.h \
		serialport.h \
		page_1.h \
		mywatch.h \
		mybutton.h \
		datastack.h \
		myspinbox.h \
		ui_datestpage.h \
		pdfheaderedit.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o datestpage.o datestpage.cpp

drawpage.o: drawpage.cpp drawpage.h \
		picture.h \
		page_1.h \
		mywatch.h \
		mybutton.h \
		datastack.h \
		myspinbox.h \
		mycombobox.h \
		pdfheaderedit.h \
		ui_picture.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o drawpage.o drawpage.cpp

homepage.o: homepage.cpp homepage.h \
		ui_homepage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o homepage.o homepage.cpp

keyboard.o: keyboard.cpp keyboard.h \
		ui_keyboard.h \
		keybutton.h \
		mybutton.h \
		mylineedit.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o keyboard.o keyboard.cpp

keybutton.o: keybutton.cpp keybutton.h \
		mybutton.h \
		keyboard.h \
		mylineedit.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o keybutton.o keybutton.cpp

main.o: main.cpp mainwindow.h \
		mybutton.h \
		page_1.h \
		mywatch.h \
		datastack.h \
		myspinbox.h \
		configpage.h \
		pdfheaderedit.h \
		drawpage.h \
		picture.h \
		mycombobox.h \
		homepage.h \
		keyboard.h \
		mylineedit.h \
		outputconfig.h \
		serialport.h \
		datestpage.h \
		receiver_thread.h \
		uartthread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		mybutton.h \
		page_1.h \
		mywatch.h \
		datastack.h \
		myspinbox.h \
		configpage.h \
		pdfheaderedit.h \
		drawpage.h \
		picture.h \
		mycombobox.h \
		homepage.h \
		keyboard.h \
		mylineedit.h \
		outputconfig.h \
		serialport.h \
		datestpage.h \
		ui_mainwindow.h \
		ui_pdfheaderedit.h \
		mycheckbox.h \
		ui_configpage.h \
		ui_picture.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

mybutton.o: mybutton.cpp mybutton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mybutton.o mybutton.cpp

mycheckbox.o: mycheckbox.cpp mycheckbox.h \
		mybutton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mycheckbox.o mycheckbox.cpp

mycombobox.o: mycombobox.cpp mycombobox.h \
		mybutton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mycombobox.o mycombobox.cpp

mylineedit.o: mylineedit.cpp mylineedit.h \
		mybutton.h \
		keyboard.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mylineedit.o mylineedit.cpp

myspinbox.o: myspinbox.cpp myspinbox.h \
		mybutton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o myspinbox.o myspinbox.cpp

mywatch.o: mywatch.cpp mywatch.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mywatch.o mywatch.cpp

outputconfig.o: outputconfig.cpp outputconfig.h \
		serialport.h \
		page_1.h \
		mywatch.h \
		mybutton.h \
		datastack.h \
		myspinbox.h \
		ui_outputconfig.h \
		mycombobox.h \
		uartthread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o outputconfig.o outputconfig.cpp

page_1.o: page_1.cpp page_1.h \
		mywatch.h \
		mybutton.h \
		datastack.h \
		myspinbox.h \
		ui_page_1.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o page_1.o page_1.cpp

pdfheaderedit.o: pdfheaderedit.cpp pdfheaderedit.h \
		datastack.h \
		page_1.h \
		mywatch.h \
		mybutton.h \
		myspinbox.h \
		ui_pdfheaderedit.h \
		mycheckbox.h \
		mylineedit.h \
		keyboard.h \
		drawpage.h \
		picture.h \
		mycombobox.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o pdfheaderedit.o pdfheaderedit.cpp

picture.o: picture.cpp picture.h \
		page_1.h \
		mywatch.h \
		mybutton.h \
		datastack.h \
		myspinbox.h \
		ui_picture.h \
		mycombobox.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o picture.o picture.cpp

receiver_thread.o: receiver_thread.cpp receiver_thread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o receiver_thread.o receiver_thread.cpp

serialport.o: serialport.cpp serialport.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o serialport.o serialport.cpp

uartthread.o: uartthread.cpp uartthread.h \
		serialport.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o uartthread.o uartthread.cpp

moc_configpage.o: moc_configpage.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_configpage.o moc_configpage.cpp

moc_datestpage.o: moc_datestpage.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_datestpage.o moc_datestpage.cpp

moc_drawpage.o: moc_drawpage.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_drawpage.o moc_drawpage.cpp

moc_homepage.o: moc_homepage.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_homepage.o moc_homepage.cpp

moc_keyboard.o: moc_keyboard.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_keyboard.o moc_keyboard.cpp

moc_keybutton.o: moc_keybutton.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_keybutton.o moc_keybutton.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_mybutton.o: moc_mybutton.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mybutton.o moc_mybutton.cpp

moc_mycheckbox.o: moc_mycheckbox.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mycheckbox.o moc_mycheckbox.cpp

moc_mycombobox.o: moc_mycombobox.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mycombobox.o moc_mycombobox.cpp

moc_mylineedit.o: moc_mylineedit.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mylineedit.o moc_mylineedit.cpp

moc_myspinbox.o: moc_myspinbox.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_myspinbox.o moc_myspinbox.cpp

moc_mywatch.o: moc_mywatch.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mywatch.o moc_mywatch.cpp

moc_outputconfig.o: moc_outputconfig.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_outputconfig.o moc_outputconfig.cpp

moc_page_1.o: moc_page_1.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_page_1.o moc_page_1.cpp

moc_pdfheaderedit.o: moc_pdfheaderedit.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_pdfheaderedit.o moc_pdfheaderedit.cpp

moc_picture.o: moc_picture.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_picture.o moc_picture.cpp

moc_receiver_thread.o: moc_receiver_thread.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_receiver_thread.o moc_receiver_thread.cpp

moc_serialport.o: moc_serialport.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_serialport.o moc_serialport.cpp

moc_uartthread.o: moc_uartthread.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_uartthread.o moc_uartthread.cpp

qrc_rcf.o: qrc_rcf.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_rcf.o qrc_rcf.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

